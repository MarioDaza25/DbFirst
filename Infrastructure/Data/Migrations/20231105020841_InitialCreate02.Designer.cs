// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Data.Migrations
{
    [DbContext(typeof(DbFirstContext))]
    [Migration("20231105020841_InitialCreate02")]
    partial class InitialCreate02
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_0900_ai_ci")
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");

            modelBuilder.Entity("Core.Entities.Driver", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int?>("Age")
                        .HasColumnType("int")
                        .HasColumnName("age");

                    b.Property<int?>("Idteam")
                        .HasColumnType("int")
                        .HasColumnName("idteam");

                    b.Property<string>("Name")
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("driver", (string)null);
                });

            modelBuilder.Entity("Core.Entities.DriverTeam", b =>
                {
                    b.Property<int>("IdDriverFk")
                        .HasColumnType("int");

                    b.Property<int>("IdTeamFk")
                        .HasColumnType("int");

                    b.HasKey("IdDriverFk", "IdTeamFk");

                    b.HasIndex("IdTeamFk");

                    b.ToTable("DriverTeam");
                });

            modelBuilder.Entity("Core.Entities.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Name" }, "idx_team_name")
                        .IsUnique();

                    b.ToTable("team", (string)null);
                });

            modelBuilder.Entity("Core.Entities.DriverTeam", b =>
                {
                    b.HasOne("Core.Entities.Driver", "Driver")
                        .WithMany("DriverTeam")
                        .HasForeignKey("IdDriverFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.Team", "Team")
                        .WithMany("DriverTeam")
                        .HasForeignKey("IdTeamFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Driver");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("Core.Entities.Driver", b =>
                {
                    b.Navigation("DriverTeam");
                });

            modelBuilder.Entity("Core.Entities.Team", b =>
                {
                    b.Navigation("DriverTeam");
                });
#pragma warning restore 612, 618
        }
    }
}
